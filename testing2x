#!/bin/bash

. "$(dirname "$(readlink -e "$0")")/config"
. "$(dirname "$(readlink -e "$0")")/db-functions"

if (( $# < 1 )); then
	msg "usage: %s <pkgname|pkgbase> ..." "${0##*/}"
	exit 1
fi

# Lock everything to reduce  possibility of interfering task between the different repo-updates
script_lock
for repo in "${TESTING_REPO}" "${STABLE_REPOS[@]}"; do
	for pkgarch in "${ARCHES[@]}"; do
		repo_lock "${repo}" "${pkgarch}" || exit 1
	done
done

declare -A pkgs

for pkgbase in "$@"; do
	for pkgarch in "${ARCHES[@]}"; do
		vcsrepo_from="$(find_repo_for_package "${pkgbase}" "${pkgarch[@]}" "${TESTING_REPO}")"
		vcsrepo_to="$(find_repo_for_package "${pkgbase}" "${pkgarch[@]}" "${STABLE_REPOS[@]}")"

		if [[ ${vcsrepo_from} && ${vcsrepo_to} ]]; then
			move_to="${vcsrepo_to%-@(any|${pkgarch})}"
			pkgs[${move_to}]+="${pkgbase} "
			break
		fi
	done
	[[ ${vcsrepo_from} ]] || die "%s not found in [%s]" "$pkgbase" "$TESTING_REPO"
	[[ ${vcsrepo_to} ]] || die "%s not found in any of these repos: %s" "$pkgbase" "${STABLE_REPOS[*]}"
done

for pkgarch in "${ARCHES[@]}"; do
	repo_unlock "${TESTING_REPO}" "${pkgarch}"
done
for repo in "${STABLE_REPOS[@]}"; do
	for pkgarch in "${ARCHES[@]}"; do
		repo_unlock "${repo}" "${pkgarch}"
	done
	if [[ -n ${pkgs[${repo}]} ]]; then
		"$(dirname "$(readlink -e "$0")")/db-move" "${TESTING_REPO}" "${repo}" ${pkgs[${repo}]}
	fi
done

script_unlock
